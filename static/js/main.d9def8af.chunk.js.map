{"version":3,"sources":["context/CityContext.js","components/SelectCity.js","context/WeatherContext.js","components/weatherCard/WeatherCard.js","components/Container.js","App.js","reportWebVitals.js","index.js"],"names":["CityContext","createContext","CityProvider","children","useState","activeCity","setactiveCity","showPosition","location","lat","coords","latitude","lon","longitude","options","method","url","axios","then","response","data","list","localStorage","setItem","JSON","stringify","catch","error","console","useEffect","navigator","geolocation","getCurrentPosition","name","coord","values","Provider","value","useCity","useContext","SelectCity","isUserLocationActive","setisUserLocationActive","cityList","userCity","parse","getItem","className","type","id","onClick","userLocation","getUserLoction","map","item","ind","React","memo","WeatherContext","WeatherProvider","weatherDetail","setDetail","undefined","WeatherCard","cardName","daily","weather","Date","dt","toDateString","main","icon","temp","max","wind_speed","Container","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9def8af.chunk.js","sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst CityContext = createContext();\r\n\r\nexport const CityProvider = ({ children }) => {\r\n    const [activeCity, setactiveCity] = useState({});\r\n\r\n    const showPosition = (location) => {\r\n        const lat = location.coords.latitude;\r\n        const lon = location.coords.longitude;\r\n        const options = {\r\n            method: 'GET',\r\n            url: `https://api.openweathermap.org/data/2.5/find?lat=${lat}&lon=${lon}&appid=2c9c7ab97001a33b80cab75254178bc8`,\r\n        };\r\n\r\n        axios(options)\r\n            .then(function (response) {\r\n                setactiveCity(response.data.list[0]);\r\n                localStorage.setItem('userLocation' , JSON.stringify(response.data.list[0]))\r\n            })\r\n            .catch(function (error) {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(showPosition);\r\n        } else {\r\n            setactiveCity({\r\n                name: \"İstanbul\",\r\n                coord: {\r\n                    lat: 41.015137,\r\n                    lon: 28.979530\r\n                }\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    const values = {\r\n        activeCity,\r\n        setactiveCity\r\n    }\r\n\r\n\r\n    return (\r\n        <CityContext.Provider value={values}>{children}</CityContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useCity = () => useContext(CityContext);\r\n\r\nexport default CityContext;","import React, { useEffect, useState } from 'react'\r\nimport { useCity } from '../context/CityContext';\r\n\r\nfunction SelectCity() {\r\n    const { activeCity, setactiveCity } = useCity();\r\n    const [isUserLocationActive, setisUserLocationActive] = useState(false);\r\n    const [cityList] = useState([\r\n        {\r\n            name: \"İstanbul\",\r\n            coord: {\r\n                lat: 41.015137,\r\n                lon: 28.979530\r\n            }\r\n        },\r\n        {\r\n            name: \"Balıkesir\",\r\n            coord: {\r\n                lat: 39.6511,\r\n                lon: 27.8842\r\n            }\r\n        },\r\n        {\r\n            name: \"Ankara\",\r\n            coord: {\r\n                lat: 39.925533,\r\n                lon: 32.866287\r\n            }\r\n        },\r\n        {\r\n            name: \"Bolu\",\r\n            coord: {\r\n                lat: 40.731647,\r\n                lon: 31.589813\r\n            }\r\n        },\r\n        {\r\n            name: \"Elazığ\",\r\n            coord: {\r\n                lat: 38.6667,\r\n                lon: 39.2167\r\n            }\r\n        },\r\n    ]);\r\n\r\n    const getUserLoction = () => {\r\n        const userLocation = localStorage.getItem('userLocation');\r\n        setactiveCity(JSON.parse(userLocation))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const userCity = JSON.parse(localStorage.getItem('userLocation'));\r\n        setisUserLocationActive(userCity.name === activeCity.name);\r\n    }, [activeCity])\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"btn-group\">\r\n                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"defaultDropdown\" data-bs-toggle=\"dropdown\" data-bs-auto-close=\"true\" aria-expanded=\"false\">\r\n                <i className=\"fas fa-city\"></i>   {activeCity.name}\r\n                </button>\r\n                <ul className=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"defaultDropdown\">\r\n                    {\r\n                        !isUserLocationActive &&\r\n                        <li><button onClick={() => getUserLoction()} className=\"dropdown-item\">\r\n                            <i className=\"fas fa-map-marker-alt\"></i>  My Location\r\n                        </button></li>\r\n                    }\r\n                    {\r\n                        cityList.map((item, ind) =>\r\n                            <li key={ind} ><button onClick={() => setactiveCity(item)} className=\"dropdown-item\">{item.name}</button></li>\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(SelectCity);\r\n","import { createContext, useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useCity } from '../context/CityContext';\r\n\r\n\r\n\r\nconst WeatherContext = createContext();\r\n\r\nexport const WeatherProvider = ({ children }) => {\r\n    const { activeCity } = useCity();\r\n    const [weatherDetail, setDetail] = useState({})\r\n\r\n    useEffect(() => {\r\n        if (activeCity && activeCity.coord !== undefined) {\r\n            const lat = activeCity.coord.lat;\r\n            const lon = activeCity.coord.lon;\r\n            const options = {\r\n                method: 'GET',\r\n                url: `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&&units=metric&exclude=hourly&appid=2c9c7ab97001a33b80cab75254178bc8`,\r\n            };\r\n\r\n            axios(options)\r\n                .then(function (response) {\r\n                    setDetail(response.data)\r\n                })\r\n                .catch(function (error) {\r\n                    console.error(error);\r\n                });\r\n        }\r\n\r\n    }, [activeCity])\r\n\r\n    const values = {\r\n        weatherDetail,\r\n        setDetail\r\n    }\r\n\r\n\r\n    return (\r\n        <WeatherContext.Provider value={values}>{children}</WeatherContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useWeather = () => useContext(WeatherContext);\r\n\r\nexport default WeatherContext;","import React, { useEffect } from 'react'\r\nimport \"./Weather.scss\"\r\nimport { useWeather } from \"../../context/WeatherContext\"\r\nimport { useCity } from '../../context/CityContext';\r\n\r\nfunction WeatherCard({ cardName = '' }) {\r\n\r\n    const { weatherDetail } = useWeather();\r\n    const { activeCity } = useCity();\r\n\r\n    useEffect(() => {\r\n    }, [weatherDetail])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card-list row justify-content-center\" >\r\n                {weatherDetail.daily &&\r\n\r\n                    weatherDetail.daily.map((weather, ind) =>\r\n                        <div key={ind} className=\"card col-2 p-0\">\r\n                            <div className=\"info-header pl-3 pr-3\">\r\n                                <div className=\"city-name\" > {activeCity.name} </div>\r\n                                <div className=\"date\" >\r\n                                    {new Date(weather.dt * 1000).toDateString()}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"icon\">\r\n                                {/* SUNNY */\r\n                                    weather.weather[0].main === \"Clear\" &&\r\n                                    <div icon=\"sunny\" data-label={weather.weather[0].main}>\r\n                                        <span className=\"sun\"></span>\r\n                                    </div>\r\n                                }\r\n\r\n                                {/* CLOUDY */\r\n                                    weather.weather[0].main === \"Clouds\" &&\r\n                                    <div icon=\"cloudy\" data-label={weather.weather[0].main}>\r\n                                        <span className=\"cloud\"></span>\r\n                                        <span className=\"cloud\"></span>\r\n                                    </div>\r\n                                }\r\n\r\n                                {/* SNOWMAN */}\r\n                                {\r\n                                    cardName === \"snowly\" &&\r\n                                    <div icon=\"snowy\" data-label={weather.weather[0].main}>\r\n                                        <span className=\"snowman\"></span>\r\n                                        <ul>\r\n                                            <li></li>\r\n                                            <li></li>\r\n                                            <li></li>\r\n                                            <li></li>\r\n                                            <li></li>\r\n                                            <li></li>\r\n                                            <li></li>\r\n                                            <li></li>\r\n                                            <li></li>\r\n                                            <li></li>\r\n                                            <li></li>\r\n                                            <li></li>\r\n                                            <li></li>\r\n                                        </ul>\r\n                                    </div>}\r\n\r\n                                {/* SOGGY */}\r\n                                {\r\n\r\n                                    weather.weather[0].main === \"Rain\" &&\r\n                                    <div icon=\"stormy\" data-label={weather.weather[0].main}>\r\n                                        <span className=\"cloud\"></span>\r\n                                        <ul>\r\n                                            <li></li>\r\n                                            <li></li>\r\n                                            <li></li>\r\n                                            <li></li>\r\n                                            <li></li>\r\n                                        </ul>\r\n                                    </div>}\r\n\r\n                                {/* MOON  */}\r\n                                {\r\n                                    cardName === \"moon\" &&\r\n                                    <div icon=\"supermoon\" data-label={weather.weather[0].main}>\r\n                                        <span className=\"moon\"></span>\r\n                                        <span className=\"meteor\"></span>\r\n                                    </div>}\r\n                            </div>\r\n\r\n                            <div className=\"weather-info\">\r\n                                <div className=\"info-body row m-0 text-center\">\r\n                                    <div className=\"centigrade mb-1 col-6\">\r\n                                        <div className=\"cent-icon mb-2 mt-2\">\r\n                                            <i className=\"fas fa-temperature-low\"></i>\r\n                                        </div>\r\n                                        <div className=\"info-text\">\r\n                                            {weather.temp.max}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"wind mb-1 col-6\">\r\n                                        <div className=\"wind-icon mb-2 mt-2\">\r\n                                            <i className=\"fas fa-wind\"></i>\r\n                                        </div>\r\n                                        <div className=\"info-text\">\r\n                                            {weather.wind_speed}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n\r\n\r\n                }\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(WeatherCard);\r\n","import React from 'react'\r\nimport SelectCity from './SelectCity';\r\nimport WeatherCard from \"./weatherCard/WeatherCard\"\r\n\r\nfunction Container() {\r\n    return (\r\n        <div className=\"container\">\r\n            <SelectCity></SelectCity>\r\n            <WeatherCard></WeatherCard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container;\r\n","import './App.css';\nimport Container from './components/Container';\nimport { CityProvider } from './context/CityContext';\nimport { WeatherProvider } from './context/WeatherContext';\n\nfunction App() {\n  return (\n    <div>\n      <CityProvider>\n        <WeatherProvider>\n          <Container></Container>\n        </WeatherProvider>\n      </CityProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}