{"version":3,"sources":["context/CityContext.js","components/selectCity/SelectCity.js","context/WeatherContext.js","components/weatherCard/WeatherCard.js","components/containerComp/Container.js","App.js","reportWebVitals.js","index.js"],"names":["CityContext","createContext","CityProvider","children","useState","activeCity","setactiveCity","showPosition","location","lat","coords","latitude","lon","longitude","options","method","url","axios","then","response","data","list","localStorage","setItem","JSON","stringify","catch","error","console","useEffect","id","name","population","region","navigator","geolocation","getCurrentPosition","values","Provider","value","useCity","useContext","SelectCity","isUserLocationActive","setisUserLocationActive","cityListData","cityList","userCity","parse","getItem","className","type","onClick","userLocation","getUserLoction","map","item","ind","React","memo","WeatherContext","WeatherProvider","weatherDetail","setDetail","coord","WeatherCard","cardName","daily","weather","Date","dt","toDateString","main","icon","temp","max","wind_speed","Container","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.caf95672.chunk.js","sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n\n\nconst CityContext = createContext();\n\nexport const CityProvider = ({ children }) => {\n    const [activeCity, setactiveCity] = useState({});\n\n    const showPosition = (location) => {\n        const lat = location.coords.latitude;\n        const lon = location.coords.longitude;\n        const options = {\n            method: 'GET',\n            url: `https://api.openweathermap.org/data/2.5/find?lat=${lat}&lon=${lon}&appid=2c9c7ab97001a33b80cab75254178bc8`,\n        };\n\n        axios(options)\n            .then(function (response) {\n                setactiveCity(response.data.list[0]);\n                localStorage.setItem('userLocation', JSON.stringify(response.data.list[0]))\n            })\n            .catch(function (error) {\n                console.error(error);\n            });\n    }\n\n    useEffect(() => {\n        setactiveCity({\n            id: 34,\n            latitude: \"41.0053\",\n            longitude: \"28.9770\",\n            name: \"Ä°stanbul\",\n            population: 14657434,\n            region: \"Marmara\"\n        });\n\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(showPosition);\n        }\n\n    }, [])\n\n    const values = {\n        activeCity,\n        setactiveCity\n    }\n\n\n    return (\n        <CityContext.Provider value={values}>{children}</CityContext.Provider>\n    )\n}\n\nexport const useCity = () => useContext(CityContext);\n\nexport default CityContext;","import React, { useEffect, useState } from 'react'\nimport { useCity } from '../../context/CityContext';\nimport cityListData from '../../jsonData/cityList.json';\nimport \"./selectCity.scss\"\n\nfunction SelectCity() {\n    const { activeCity, setactiveCity } = useCity();\n    const [isUserLocationActive, setisUserLocationActive] = useState(false);\n    const [cityList] = useState(cityListData);\n\n    const getUserLoction = () => {\n        const userLocation = localStorage.getItem('userLocation');\n        setactiveCity(JSON.parse(userLocation))\n    }\n\n    useEffect(() => {\n        const userCity = JSON.parse(localStorage.getItem('userLocation'));\n        if (userCity) {\n            setisUserLocationActive(userCity.name === activeCity.name);\n        }\n    }, [activeCity])\n\n    return (\n        <div>\n\n            {\n                activeCity &&\n                <div className=\"btn-group\">\n                    <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"defaultDropdown\" data-bs-toggle=\"dropdown\" data-bs-auto-close=\"true\" aria-expanded=\"false\">\n                        <i className=\"fas fa-city\"></i>   {activeCity.name}\n                    </button>\n                    <ul className=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"defaultDropdown\">\n                        {\n                            !isUserLocationActive &&\n                            <li><button onClick={() => getUserLoction()} className=\"dropdown-item\">\n                                <i className=\"fas fa-map-marker-alt\"></i>  My Location\n                            </button></li>\n                        }\n                        {\n                            cityList.map((item, ind) =>\n                                <li key={ind} ><button onClick={() => setactiveCity(item)} className=\"dropdown-item\">{item.name}</button></li>\n                            )\n                        }\n                    </ul>\n                </div>\n\n            }\n\n\n        </div>\n    )\n}\n\nexport default React.memo(SelectCity);\n","import { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useCity } from '../context/CityContext';\n\n\n\nconst WeatherContext = createContext();\n\nexport const WeatherProvider = ({ children }) => {\n    const { activeCity } = useCity();\n    const [weatherDetail, setDetail] = useState({})\n\n    useEffect(() => {\n        if (activeCity && (activeCity.coord || activeCity.latitude)) {\n            const lat = activeCity.coord ? activeCity.coord.lat : activeCity.latitude;\n            const lon = activeCity.coord ? activeCity.coord.lon : activeCity.longitude;\n\n            const options = {\n                method: 'GET',\n                url: `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&&units=metric&exclude=hourly&appid=2c9c7ab97001a33b80cab75254178bc8`,\n            };\n\n            axios(options)\n                .then(function (response) {\n                    setDetail(response.data)\n                })\n                .catch(function (error) {\n                    console.error(error);\n                });\n        }\n\n    }, [activeCity])\n\n    const values = {\n        weatherDetail,\n        setDetail\n    }\n\n\n    return (\n        <WeatherContext.Provider value={values}>{children}</WeatherContext.Provider>\n    )\n}\n\nexport const useWeather = () => useContext(WeatherContext);\n\nexport default WeatherContext;","import React, { useEffect } from 'react'\nimport \"./Weather.scss\"\nimport { useWeather } from \"../../context/WeatherContext\"\nimport { useCity } from '../../context/CityContext';\n\nfunction WeatherCard({ cardName = '' }) {\n\n    const { weatherDetail } = useWeather();\n    const { activeCity } = useCity();\n\n    useEffect(() => {\n    }, [weatherDetail])\n\n    return (\n        <div>\n            <div className=\"card-list row justify-content-center\" >\n                {weatherDetail.daily &&\n\n                    weatherDetail.daily.map((weather, ind) =>\n                        <div key={ind} className=\"card col-2 p-0\">\n                            <div className=\"info-header pl-3 pr-3\">\n                                <div className=\"city-name\" > {activeCity.name} </div>\n                                <div className=\"date\" >\n                                    {new Date(weather.dt * 1000).toDateString()}\n                                </div>\n                            </div>\n                            <div className=\"icon\">\n                                {/* SUNNY */\n                                    weather.weather[0].main === \"Clear\" &&\n                                    <div className=\"icon-case\" icon=\"sunny\" data-label={weather.weather[0].main}>\n                                        <span className=\"sun\"></span>\n                                    </div>\n                                }\n\n                                {/* CLOUDY */\n                                    weather.weather[0].main === \"Clouds\" &&\n                                    <div className=\"icon-case\" icon=\"cloudy\" data-label={weather.weather[0].main}>\n                                        <span className=\"cloud\"></span>\n                                        <span className=\"cloud\"></span>\n                                    </div>\n                                }\n\n                                {/* SNOWMAN */}\n                                {\n                                    cardName === \"snowly\" &&\n                                    <div className=\"icon-case\" icon=\"snowy\" data-label={weather.weather[0].main}>\n                                        <span className=\"snowman\"></span>\n                                        <ul>\n                                            <li></li>\n                                            <li></li>\n                                            <li></li>\n                                            <li></li>\n                                            <li></li>\n                                            <li></li>\n                                            <li></li>\n                                            <li></li>\n                                            <li></li>\n                                            <li></li>\n                                            <li></li>\n                                            <li></li>\n                                            <li></li>\n                                        </ul>\n                                    </div>}\n\n                                {/* SOGGY */}\n                                {\n\n                                    weather.weather[0].main === \"Rain\" &&\n                                    <div className=\"icon-case\" icon=\"stormy\" data-label={weather.weather[0].main}>\n                                        <span className=\"cloud\"></span>\n                                        <ul>\n                                            <li></li>\n                                            <li></li>\n                                            <li></li>\n                                            <li></li>\n                                            <li></li>\n                                        </ul>\n                                    </div>}\n\n                                {/* MOON  */}\n                                {\n                                    cardName === \"moon\" &&\n                                    <div className=\"icon-case\" icon=\"supermoon\" data-label={weather.weather[0].main}>\n                                        <span className=\"moon\"></span>\n                                        <span className=\"meteor\"></span>\n                                    </div>}\n                            </div>\n\n                            <div className=\"weather-info\">\n                                <div className=\"info-body row m-0 text-center\">\n                                    <div className=\"centigrade mb-1 col-6\">\n                                        <div className=\"cent-icon mb-2 mt-2\">\n                                            <i className=\"fas fa-temperature-low\"></i>\n                                        </div>\n                                        <div className=\"info-text\">\n                                            {weather.temp.max}\n                                        </div>\n                                    </div>\n                                    <div className=\"wind mb-1 col-6\">\n                                        <div className=\"wind-icon mb-2 mt-2\">\n                                            <i className=\"fas fa-wind\"></i>\n                                        </div>\n                                        <div className=\"info-text\">\n                                            {weather.wind_speed}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    )\n\n\n                }\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default React.memo(WeatherCard);\n","import React from 'react'\nimport SelectCity from '../selectCity/SelectCity';\nimport WeatherCard from \"../weatherCard/WeatherCard\";\nimport './container.scss'\n\nfunction Container() {\n    return (\n        <div className=\"container\">\n            <div className=\"page-case d-flex\">\n                <div className=\"select-component\">\n                    <SelectCity></SelectCity>\n                </div>\n                <WeatherCard></WeatherCard>\n            </div>\n        </div>\n    )\n}\n\nexport default Container;\n","import './App.css';\nimport Container from './components/containerComp/Container';\nimport { CityProvider } from './context/CityContext';\nimport { WeatherProvider } from './context/WeatherContext';\n\nfunction App() {\n  return (\n    <div>\n      <CityProvider>\n        <WeatherProvider>\n          <Container></Container>\n        </WeatherProvider>\n      </CityProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}